// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/relab/hotstuff (interfaces: CommandQueue)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	hotstuff "github.com/relab/hotstuff"
	reflect "reflect"
)

// MockCommandQueue is a mock of CommandQueue interface
type MockCommandQueue struct {
	ctrl     *gomock.Controller
	recorder *MockCommandQueueMockRecorder
}

// MockCommandQueueMockRecorder is the mock recorder for MockCommandQueue
type MockCommandQueueMockRecorder struct {
	mock *MockCommandQueue
}

// NewMockCommandQueue creates a new mock instance
func NewMockCommandQueue(ctrl *gomock.Controller) *MockCommandQueue {
	mock := &MockCommandQueue{ctrl: ctrl}
	mock.recorder = &MockCommandQueueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCommandQueue) EXPECT() *MockCommandQueueMockRecorder {
	return m.recorder
}

// GetCommand mocks base method
func (m *MockCommandQueue) GetCommand() *hotstuff.Command {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCommand")
	ret0, _ := ret[0].(*hotstuff.Command)
	return ret0
}

// GetCommand indicates an expected call of GetCommand
func (mr *MockCommandQueueMockRecorder) GetCommand() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCommand", reflect.TypeOf((*MockCommandQueue)(nil).GetCommand))
}
